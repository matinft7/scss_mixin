@use "sass:map";
@use "sass:list";

//Set basic setting of your style
@mixin baseSetting($fontFamily,$fontSize,$textColor,$linkColor){
    *{
        margin: 0;
        padding: 0;
        font-family: $fontFamily;
        font-size: $fontSize;
        color: $textColor;
    }
    a{
        color: $linkColor;
    }
}

@mixin flex($direction,$wrap,$moreOption : false,$alignItems : center,$justifyContent : center){
    display: flex;
    flex-flow: $direction $wrap;
    // if you want to use align-items and justify-content you can set $moreOption : true
    @if $moreOption {
        align-items: $alignItems;
        justify-content: $justifyContent;
    }
}

//Args should be like $icons : (10px,20px,30px);
@mixin icon($sizes){
    @each $size in $sizes{
        .icon-#{$size}{
            font-size: $size;
            width: $size;
            height: $size;
        }
    }
}

//Args should be like $fonts : (("name" : fontName,"size" : 2px,"weight":500));
@mixin font($fontData){
    @each $font in $fontData{
        $name : map.get($font,"name");
        .font-#{$name}{
            $size : map.get($font,"size");
            $weight : map.get($font,"weight");
            font-size: $size;
            font-weight: $weight;
        }
    }
}

//Args should be like $sizes : radius((25px,65px,1px,0)); --topRight,topLeft,BottomRight,bottomLeft-- or
//                    $sizes : radius((25px,65px)); --top,bottom-- or
//                    $sizes : radius(25px); --all--
@mixin radius($sizes){
    @if list.length($sizes) == 4 {
        border-top-right-radius: list.nth($sizes,1);
        border-top-left-radius: list.nth($sizes,2);
        border-bottom-right-radius: list.nth($sizes,3);
        border-bottom-left-radius: list.nth($sizes,4);
    }
    @else if list.length($sizes) == 2{
        border-top-right-radius: list.nth($sizes,1);
        border-top-left-radius: list.nth($sizes,1);
        border-bottom-right-radius: list.nth($sizes,2);
        border-bottom-left-radius: list.nth($sizes,2);
    }
    @else if list.length($sizes) == 1{
        border-radius: $sizes;
    }
    @else{
        @error "invalid arg!";
    }
}

//Args should be like @include card((20px,25px),0 0 4px 0,red);
//radius can have 1,2 or 4 elements
@mixin card($radius,$padding,$shadowConf,$shadowColor){
    @include radius($radius);
    padding: $padding;
    box-shadow: $shadowConf $shadowColor;
}